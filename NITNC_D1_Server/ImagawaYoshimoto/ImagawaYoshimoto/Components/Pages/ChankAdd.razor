@page "/ChankAdd"
@using System.Globalization
@using System.Text
@using NITNC_D1_Server.DataContext
@using Microsoft.EntityFrameworkCore
@implements IDisposable
@inject ApplicationDbContext Context
@rendermode InteractiveServer

<PageTitle>チャンク | エイブラハム・リンカン | 今川義元</PageTitle>
<h3>クラウン チャンクで英単語 Standard 第2版 標準 のデータを登録します．</h3>

@if (error)
{
    <RadzenAlert Variant="Variant.Flat" AlertStyle="AlertStyle.Warning" Icon="warning" Shade="Shade.Lighter" Size="AlertSize.Small" AllowClose=false>
        @errorMessage
    </RadzenAlert>
}

<RadzenAlert Variant="Variant.Flat" AlertStyle="AlertStyle.Info" Icon="info" Shade="Shade.Lighter" Size="AlertSize.Small" AllowClose=false>
    ここでは，CSVファイルでアップロードしていただきます．Excelなどで作成されるかと思いますが，次の注意事項をお守り下さい．<br/>
    ・ファイルは1STEPごとに作成し，1ファイルごとアップロードしてください．<br/>
    ・A列1行目からはじめ，1行目から問題を入力して下さい．キャプションは，左から順に，Answer，Japanese，Englishとしてください．<br/>
    ・A列から順に，チャンクの解答，日本語，問題　の順番としてください．<br/>
</RadzenAlert>
<RadzenRow AlignItems="AlignItems.End" Wrap="FlexWrap.Wrap" Gap="1rem" class="rz-p-sm-12">
    <RadzenColumn Size="12" SizeMD="6" SizeLG="3">
        <RadzenFormField Text="STEP番号" Style="width: 100%;">
            <RadzenNumeric TValue="int" Change="i => StepNo=i"></RadzenNumeric>
        </RadzenFormField>
    </RadzenColumn>
    <RadzenColumn Size="12" SizeMD="6" SizeLG="3">
        <RadzenFormField Text="データファイル(csv)" Style="width: 100%;" >
            <RadzenFileInput TValue="string" Change="s => ChankData=s"></RadzenFileInput>
        </RadzenFormField>
    </RadzenColumn>
</RadzenRow>
<RadzenButton Click="SubmitChank">チャンクの問題をリンカンに登録する</RadzenButton>

@if (completed)
{
    <RadzenAlert Variant="Variant.Flat" AlertStyle="AlertStyle.Info" Icon="info" Shade="Shade.Lighter" Size="AlertSize.Small" AllowClose=false>
        登録に成功しました．
    </RadzenAlert>
}
@code {
    private int StepNo { get; set; } = 0;
    private string ChankData { get; set; }
    private bool busy = false;
    private bool error = false;
    private bool completed = false;
    private string errorMessage = "";

    private void SubmitChank(MouseEventArgs obj)
    {
        if (busy) return;
        busy = true;
        error = false;
        if (ChankData.IndexOf("data:text/csv;base64,") == -1)
        {
            error = true;
            errorMessage = "CSVファイルをアップロードしてください．";
            return;
        }
        var data = Encoding.UTF8.GetString(Convert.FromBase64String(ChankData.Replace("data:text/csv;base64,",""))).Replace('\r','\n').Replace("\r\n","\n").Split('\n');
        
        if (data[0] != "\"Answer\",\"Japanese\",\"English\"")
        {
            error = true;
            errorMessage = "正しい形式のCSVファイルをアップロードしてください．";
            return;
        }
        for (int i = 0; i < data.Length; i++)
        {
            if (string.IsNullOrWhiteSpace(data[i])) continue;
            if (i == 0) data[0] += ",\"Id\",\"Step\"";
            else data[i] += ",\"0\",\"0\"";
        }
        
        var editedCSV = "";
        foreach (var dt1 in data)
        {
            editedCSV += dt1 + "\n";
        }

        editedCSV = editedCSV[..^1];
        var parse = new CsvHelper.CsvReader(new StringReader(editedCSV),CultureInfo.CurrentCulture);
        parse.Read();
        parse.ReadHeader();
        var res = parse.GetRecords<ChankQuestions>().Select(x => new ChankQuestions(){ Answer = x.Answer, English = x.English, Japanese = x.Japanese, Step = StepNo});
        foreach (var data1 in res)
        {
            Context.Add(data1);
        }
        Context.SaveChanges();
        busy = false;
        completed = true;
    }

    public void Dispose(){}

    
}