@page "/FactbookAdd"
@using System.Globalization
@using System.Text
@using NITNC_D1_Server.DataContext
@using Microsoft.EntityFrameworkCore
@implements IDisposable
@inject ApplicationDbContext Context
@rendermode InteractiveServer

<PageTitle>FactBook | エイブラハム・リンカン | 今川義元</PageTitle>
<h3>総合英語 FACTBOOK これからの英文法 NEW EDITION The Sentences 暗唱例文集 のデータを登録します．</h3>

@if (error)
{
    <RadzenAlert Variant="Variant.Flat" AlertStyle="AlertStyle.Warning" Icon="warning" Shade="Shade.Lighter" Size="AlertSize.Small" AllowClose=false>
        @errorMessage
    </RadzenAlert>
}

<RadzenAlert Variant="Variant.Flat" AlertStyle="AlertStyle.Info" Icon="info" Shade="Shade.Lighter" Size="AlertSize.Small" AllowClose=false>
    ここでは，CSVファイルでアップロードしていただきます．Excelなどで作成されるかと思いますが，次の注意事項をお守り下さい．<br/>
    ・ファイルは1Chapterごとに作成し，1ファイルごとアップロードしてください．<br/>
    ・A列1行目からはじめ，1行目から問題を入力して下さい．キャプションは，左から順に Answer，Japaneseとしてください．<br/>
    ・A列から順に，解答，日本語　の順番としてください．<br/>
</RadzenAlert>
<RadzenAlert Variant="Variant.Flat" AlertStyle="AlertStyle.Danger" Icon="priority_high" Shade="Shade.Lighter" Size="AlertSize.Small" AllowClose=false>
    重要な確認事項：いまからアップロードしていただくデータはFactBook 暗唱例文集の @nextIndex であることを確認してください．
</RadzenAlert>
<RadzenFormField Text="データファイル(csv)" Style="width: 100%;">
    <RadzenFileInput TValue="string" Change="s => FactbookData=s"></RadzenFileInput>
</RadzenFormField>
<RadzenButton Click="SubmitFACTBOOK">FACTBOOKの問題をリンカンに登録する</RadzenButton>

@if (completed)
{
    <RadzenAlert Variant="Variant.Flat" AlertStyle="AlertStyle.Info" Icon="info" Shade="Shade.Lighter" Size="AlertSize.Small" AllowClose=false>
        登録に成功しました．
    </RadzenAlert>
}
@code {
    private string FactbookData { get; set; }
    private bool busy = false;
    private bool error = false;
    private bool completed = false;
    private string errorMessage = "";
    private int nextIndex = 0;
    protected override Task OnInitializedAsync()
    {
        var res = -1;
        if (Context.FactbookQuestions.Count() == 0) res = 0;
        else res=Context.FactbookQuestions.Max(b=>b.Id);
        nextIndex = res + 1;
        return base.OnInitializedAsync();
    }
    private void SubmitFACTBOOK(MouseEventArgs obj)
    {
        if (busy) return;
        busy = true;
        error = false;
        if (FactbookData.IndexOf("data:text/csv;base64,") == -1)
        {
            error = true;
            errorMessage = "CSVファイルをアップロードしてください．";
            return;
        }
        var data = Encoding.UTF8.GetString(Convert.FromBase64String(FactbookData.Replace("data:text/csv;base64,",""))).Replace('\r','\n').Replace("\r\n","\n").Split('\n');
        
        if (data[0] != "\"Answer\",\"Japanese\"")
        {
            error = true;
            errorMessage = "正しい形式のCSVファイルをアップロードしてください．";
            return;
        }
        for (int i = 0; i < data.Length; i++)
        {
            if (string.IsNullOrWhiteSpace(data[i])) continue;
            if (i == 0) data[0] += ",\"Id\"";
            else data[i] += ",\"0\",\"0\"";
        }
        
        var editedCSV = "";
        foreach (var dt1 in data)
        {
            editedCSV += dt1 + "\n";
        }

        editedCSV = editedCSV[..^1];
        var parse = new CsvHelper.CsvReader(new StringReader(editedCSV),CultureInfo.CurrentCulture);
        parse.Read();
        parse.ReadHeader();
        var res = parse.GetRecords<FactbookQuestions>().Select(x => new FactbookQuestions(){ Answer = x.Answer, Japanese = x.Japanese});
        foreach (var data1 in res)
        {
            Context.Add(data1);
        }
        Context.SaveChanges();
        busy = false;
        completed = true;
    }

    public void Dispose(){}

    
}